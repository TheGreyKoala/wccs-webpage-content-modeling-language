/*
 * generated by Xtext 2.12.0
 */
package de.tgremple.siteanalyser.configuration.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ConfigurationLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SiteStructureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.SiteStructure");
		private final Assignment cTypeDefinitionsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypeDefinitionsTypeParserRuleCall_0 = (RuleCall)cTypeDefinitionsAssignment.eContents().get(0);
		
		//SiteStructure:
		//	typeDefinitions+=Type*;
		@Override public ParserRule getRule() { return rule; }
		
		//typeDefinitions+=Type*
		public Assignment getTypeDefinitionsAssignment() { return cTypeDefinitionsAssignment; }
		
		//Type
		public RuleCall getTypeDefinitionsTypeParserRuleCall_0() { return cTypeDefinitionsTypeParserRuleCall_0; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContentTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPageTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReferenceTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Type:
		//	ContentType | PageType | ReferenceType;
		@Override public ParserRule getRule() { return rule; }
		
		//ContentType | PageType | ReferenceType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ContentType
		public RuleCall getContentTypeParserRuleCall_0() { return cContentTypeParserRuleCall_0; }
		
		//PageType
		public RuleCall getPageTypeParserRuleCall_1() { return cPageTypeParserRuleCall_1; }
		
		//ReferenceType
		public RuleCall getReferenceTypeParserRuleCall_2() { return cReferenceTypeParserRuleCall_2; }
	}
	public class ContentTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.ContentType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cRecognizedKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cByKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSelectorAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSelectorContentSelectorParserRuleCall_3_3_0 = (RuleCall)cSelectorAssignment_3_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRecognizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPropertiesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPropertiesPropertyParserRuleCall_4_1_0 = (RuleCall)cPropertiesAssignment_4_1.eContents().get(0);
		
		//ContentType:
		//	'content' 'type' name=ID ('is' 'recognized' 'by' selector=ContentSelector)? ('recognize' properties+=Property*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'content' 'type' name=ID ('is' 'recognized' 'by' selector=ContentSelector)? ('recognize' properties+=Property*)?
		public Group getGroup() { return cGroup; }
		
		//'content'
		public Keyword getContentKeyword_0() { return cContentKeyword_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('is' 'recognized' 'by' selector=ContentSelector)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'is'
		public Keyword getIsKeyword_3_0() { return cIsKeyword_3_0; }
		
		//'recognized'
		public Keyword getRecognizedKeyword_3_1() { return cRecognizedKeyword_3_1; }
		
		//'by'
		public Keyword getByKeyword_3_2() { return cByKeyword_3_2; }
		
		//selector=ContentSelector
		public Assignment getSelectorAssignment_3_3() { return cSelectorAssignment_3_3; }
		
		//ContentSelector
		public RuleCall getSelectorContentSelectorParserRuleCall_3_3_0() { return cSelectorContentSelectorParserRuleCall_3_3_0; }
		
		//('recognize' properties+=Property*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'recognize'
		public Keyword getRecognizeKeyword_4_0() { return cRecognizeKeyword_4_0; }
		
		//properties+=Property*
		public Assignment getPropertiesAssignment_4_1() { return cPropertiesAssignment_4_1; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_4_1_0() { return cPropertiesPropertyParserRuleCall_4_1_0; }
	}
	public class ReferenceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.ReferenceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cRecognizedKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cByKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSelectorAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSelectorContentSelectorParserRuleCall_3_3_0 = (RuleCall)cSelectorAssignment_3_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRecognizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPropertiesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPropertiesPropertyParserRuleCall_4_1_0 = (RuleCall)cPropertiesAssignment_4_1.eContents().get(0);
		
		//ReferenceType:
		//	'reference' 'type' name=ID ('is' 'recognized' 'by' selector=ContentSelector)? ('recognize' properties+=Property*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'reference' 'type' name=ID ('is' 'recognized' 'by' selector=ContentSelector)? ('recognize' properties+=Property*)?
		public Group getGroup() { return cGroup; }
		
		//'reference'
		public Keyword getReferenceKeyword_0() { return cReferenceKeyword_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('is' 'recognized' 'by' selector=ContentSelector)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'is'
		public Keyword getIsKeyword_3_0() { return cIsKeyword_3_0; }
		
		//'recognized'
		public Keyword getRecognizedKeyword_3_1() { return cRecognizedKeyword_3_1; }
		
		//'by'
		public Keyword getByKeyword_3_2() { return cByKeyword_3_2; }
		
		//selector=ContentSelector
		public Assignment getSelectorAssignment_3_3() { return cSelectorAssignment_3_3; }
		
		//ContentSelector
		public RuleCall getSelectorContentSelectorParserRuleCall_3_3_0() { return cSelectorContentSelectorParserRuleCall_3_3_0; }
		
		//('recognize' properties+=Property*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'recognize'
		public Keyword getRecognizeKeyword_4_0() { return cRecognizeKeyword_4_0; }
		
		//properties+=Property*
		public Assignment getPropertiesAssignment_4_1() { return cPropertiesAssignment_4_1; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_4_1_0() { return cPropertiesPropertyParserRuleCall_4_1_0; }
	}
	public class PageTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.PageType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cIsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRecognizedKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cByKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSelectorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSelectorPageSelectorParserRuleCall_6_0 = (RuleCall)cSelectorAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cRecognizeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPropertiesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPropertiesPropertyParserRuleCall_7_1_0 = (RuleCall)cPropertiesAssignment_7_1.eContents().get(0);
		
		//PageType:
		//	'page' 'type' name=ID
		//	'is' 'recognized' 'by' selector=PageSelector ('recognize' properties+=Property*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'page' 'type' name=ID 'is' 'recognized' 'by' selector=PageSelector ('recognize' properties+=Property*)?
		public Group getGroup() { return cGroup; }
		
		//'page'
		public Keyword getPageKeyword_0() { return cPageKeyword_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'is'
		public Keyword getIsKeyword_3() { return cIsKeyword_3; }
		
		//'recognized'
		public Keyword getRecognizedKeyword_4() { return cRecognizedKeyword_4; }
		
		//'by'
		public Keyword getByKeyword_5() { return cByKeyword_5; }
		
		//selector=PageSelector
		public Assignment getSelectorAssignment_6() { return cSelectorAssignment_6; }
		
		//PageSelector
		public RuleCall getSelectorPageSelectorParserRuleCall_6_0() { return cSelectorPageSelectorParserRuleCall_6_0; }
		
		//('recognize' properties+=Property*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'recognize'
		public Keyword getRecognizeKeyword_7_0() { return cRecognizeKeyword_7_0; }
		
		//properties+=Property*
		public Assignment getPropertiesAssignment_7_1() { return cPropertiesAssignment_7_1; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_7_1_0() { return cPropertiesPropertyParserRuleCall_7_1_0; }
	}
	public class ContentSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.ContentSelector");
		private final RuleCall cCssSelectorParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ContentSelector:
		//	CssSelector;
		@Override public ParserRule getRule() { return rule; }
		
		//CssSelector
		public RuleCall getCssSelectorParserRuleCall() { return cCssSelectorParserRuleCall; }
	}
	public class PageSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.PageSelector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCssSelectorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUrlPatternSelectorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PageSelector:
		//	CssSelector | UrlPatternSelector;
		@Override public ParserRule getRule() { return rule; }
		
		//CssSelector | UrlPatternSelector
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CssSelector
		public RuleCall getCssSelectorParserRuleCall_0() { return cCssSelectorParserRuleCall_0; }
		
		//UrlPatternSelector
		public RuleCall getUrlPatternSelectorParserRuleCall_1() { return cUrlPatternSelectorParserRuleCall_1; }
	}
	public class CssSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.CssSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCssKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_1_0 = (RuleCall)cDefinitionAssignment_1.eContents().get(0);
		
		//CssSelector:
		//	'css' definition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'css' definition=STRING
		public Group getGroup() { return cGroup; }
		
		//'css'
		public Keyword getCssKeyword_0() { return cCssKeyword_0; }
		
		//definition=STRING
		public Assignment getDefinitionAssignment_1() { return cDefinitionAssignment_1; }
		
		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_1_0() { return cDefinitionSTRINGTerminalRuleCall_1_0; }
	}
	public class UrlPatternSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.UrlPatternSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUrlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPatternKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDefinitionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDefinitionAssignment_2.eContents().get(0);
		
		//UrlPatternSelector:
		//	'url' 'pattern' definition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'url' 'pattern' definition=STRING
		public Group getGroup() { return cGroup; }
		
		//'url'
		public Keyword getUrlKeyword_0() { return cUrlKeyword_0; }
		
		//'pattern'
		public Keyword getPatternKeyword_1() { return cPatternKeyword_1; }
		
		//definition=STRING
		public Assignment getDefinitionAssignment_2() { return cDefinitionAssignment_2; }
		
		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_2_0() { return cDefinitionSTRINGTerminalRuleCall_2_0; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tgremple.siteanalyser.configuration.ConfigurationLanguage.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeContentTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeContentTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeContentTypeCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cByKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSelectorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSelectorContentSelectorParserRuleCall_3_1_0 = (RuleCall)cSelectorAssignment_3_1.eContents().get(0);
		
		//Property:
		//	name=ID 'as' type=[ContentType] ('by' selector=ContentSelector)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID 'as' type=[ContentType] ('by' selector=ContentSelector)?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'as'
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }
		
		//type=[ContentType]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[ContentType]
		public CrossReference getTypeContentTypeCrossReference_2_0() { return cTypeContentTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeContentTypeIDTerminalRuleCall_2_0_1() { return cTypeContentTypeIDTerminalRuleCall_2_0_1; }
		
		//('by' selector=ContentSelector)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'by'
		public Keyword getByKeyword_3_0() { return cByKeyword_3_0; }
		
		//selector=ContentSelector
		public Assignment getSelectorAssignment_3_1() { return cSelectorAssignment_3_1; }
		
		//ContentSelector
		public RuleCall getSelectorContentSelectorParserRuleCall_3_1_0() { return cSelectorContentSelectorParserRuleCall_3_1_0; }
	}
	
	
	private final SiteStructureElements pSiteStructure;
	private final TypeElements pType;
	private final ContentTypeElements pContentType;
	private final ReferenceTypeElements pReferenceType;
	private final PageTypeElements pPageType;
	private final ContentSelectorElements pContentSelector;
	private final PageSelectorElements pPageSelector;
	private final CssSelectorElements pCssSelector;
	private final UrlPatternSelectorElements pUrlPatternSelector;
	private final PropertyElements pProperty;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ConfigurationLanguageGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSiteStructure = new SiteStructureElements();
		this.pType = new TypeElements();
		this.pContentType = new ContentTypeElements();
		this.pReferenceType = new ReferenceTypeElements();
		this.pPageType = new PageTypeElements();
		this.pContentSelector = new ContentSelectorElements();
		this.pPageSelector = new PageSelectorElements();
		this.pCssSelector = new CssSelectorElements();
		this.pUrlPatternSelector = new UrlPatternSelectorElements();
		this.pProperty = new PropertyElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.tgremple.siteanalyser.configuration.ConfigurationLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//SiteStructure:
	//	typeDefinitions+=Type*;
	public SiteStructureElements getSiteStructureAccess() {
		return pSiteStructure;
	}
	
	public ParserRule getSiteStructureRule() {
		return getSiteStructureAccess().getRule();
	}
	
	//Type:
	//	ContentType | PageType | ReferenceType;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//ContentType:
	//	'content' 'type' name=ID ('is' 'recognized' 'by' selector=ContentSelector)? ('recognize' properties+=Property*)?;
	public ContentTypeElements getContentTypeAccess() {
		return pContentType;
	}
	
	public ParserRule getContentTypeRule() {
		return getContentTypeAccess().getRule();
	}
	
	//ReferenceType:
	//	'reference' 'type' name=ID ('is' 'recognized' 'by' selector=ContentSelector)? ('recognize' properties+=Property*)?;
	public ReferenceTypeElements getReferenceTypeAccess() {
		return pReferenceType;
	}
	
	public ParserRule getReferenceTypeRule() {
		return getReferenceTypeAccess().getRule();
	}
	
	//PageType:
	//	'page' 'type' name=ID
	//	'is' 'recognized' 'by' selector=PageSelector ('recognize' properties+=Property*)?;
	public PageTypeElements getPageTypeAccess() {
		return pPageType;
	}
	
	public ParserRule getPageTypeRule() {
		return getPageTypeAccess().getRule();
	}
	
	//ContentSelector:
	//	CssSelector;
	public ContentSelectorElements getContentSelectorAccess() {
		return pContentSelector;
	}
	
	public ParserRule getContentSelectorRule() {
		return getContentSelectorAccess().getRule();
	}
	
	//PageSelector:
	//	CssSelector | UrlPatternSelector;
	public PageSelectorElements getPageSelectorAccess() {
		return pPageSelector;
	}
	
	public ParserRule getPageSelectorRule() {
		return getPageSelectorAccess().getRule();
	}
	
	//CssSelector:
	//	'css' definition=STRING;
	public CssSelectorElements getCssSelectorAccess() {
		return pCssSelector;
	}
	
	public ParserRule getCssSelectorRule() {
		return getCssSelectorAccess().getRule();
	}
	
	//UrlPatternSelector:
	//	'url' 'pattern' definition=STRING;
	public UrlPatternSelectorElements getUrlPatternSelectorAccess() {
		return pUrlPatternSelector;
	}
	
	public ParserRule getUrlPatternSelectorRule() {
		return getUrlPatternSelectorAccess().getRule();
	}
	
	//Property:
	//	name=ID 'as' type=[ContentType] ('by' selector=ContentSelector)?;
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
