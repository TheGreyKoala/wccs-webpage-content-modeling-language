/*
 * generated by Xtext 2.12.0
 */
package de.tgremple.siteanalyser.configuration.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.tgremple.siteanalyser.configuration.ide.contentassist.antlr.internal.InternalConfigurationLanguageParser;
import de.tgremple.siteanalyser.configuration.services.ConfigurationLanguageGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ConfigurationLanguageParser extends AbstractContentAssistParser {

	@Inject
	private ConfigurationLanguageGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalConfigurationLanguageParser createParser() {
		InternalConfigurationLanguageParser result = new InternalConfigurationLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getPageSelectorAccess().getAlternatives(), "rule__PageSelector__Alternatives");
					put(grammarAccess.getContentTypeAccess().getGroup(), "rule__ContentType__Group__0");
					put(grammarAccess.getContentTypeAccess().getGroup_3(), "rule__ContentType__Group_3__0");
					put(grammarAccess.getContentTypeAccess().getGroup_4(), "rule__ContentType__Group_4__0");
					put(grammarAccess.getReferenceTypeAccess().getGroup(), "rule__ReferenceType__Group__0");
					put(grammarAccess.getReferenceTypeAccess().getGroup_3(), "rule__ReferenceType__Group_3__0");
					put(grammarAccess.getReferenceTypeAccess().getGroup_4(), "rule__ReferenceType__Group_4__0");
					put(grammarAccess.getPageTypeAccess().getGroup(), "rule__PageType__Group__0");
					put(grammarAccess.getPageTypeAccess().getGroup_7(), "rule__PageType__Group_7__0");
					put(grammarAccess.getCssSelectorAccess().getGroup(), "rule__CssSelector__Group__0");
					put(grammarAccess.getUrlPatternSelectorAccess().getGroup(), "rule__UrlPatternSelector__Group__0");
					put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
					put(grammarAccess.getPropertyAccess().getGroup_3(), "rule__Property__Group_3__0");
					put(grammarAccess.getSiteStructureAccess().getTypeDefinitionsAssignment(), "rule__SiteStructure__TypeDefinitionsAssignment");
					put(grammarAccess.getContentTypeAccess().getNameAssignment_2(), "rule__ContentType__NameAssignment_2");
					put(grammarAccess.getContentTypeAccess().getSelectorAssignment_3_3(), "rule__ContentType__SelectorAssignment_3_3");
					put(grammarAccess.getContentTypeAccess().getPropertiesAssignment_4_1(), "rule__ContentType__PropertiesAssignment_4_1");
					put(grammarAccess.getReferenceTypeAccess().getNameAssignment_2(), "rule__ReferenceType__NameAssignment_2");
					put(grammarAccess.getReferenceTypeAccess().getSelectorAssignment_3_3(), "rule__ReferenceType__SelectorAssignment_3_3");
					put(grammarAccess.getReferenceTypeAccess().getPropertiesAssignment_4_1(), "rule__ReferenceType__PropertiesAssignment_4_1");
					put(grammarAccess.getPageTypeAccess().getNameAssignment_2(), "rule__PageType__NameAssignment_2");
					put(grammarAccess.getPageTypeAccess().getSelectorAssignment_6(), "rule__PageType__SelectorAssignment_6");
					put(grammarAccess.getPageTypeAccess().getPropertiesAssignment_7_1(), "rule__PageType__PropertiesAssignment_7_1");
					put(grammarAccess.getCssSelectorAccess().getDefinitionAssignment_1(), "rule__CssSelector__DefinitionAssignment_1");
					put(grammarAccess.getUrlPatternSelectorAccess().getDefinitionAssignment_2(), "rule__UrlPatternSelector__DefinitionAssignment_2");
					put(grammarAccess.getPropertyAccess().getNameAssignment_0(), "rule__Property__NameAssignment_0");
					put(grammarAccess.getPropertyAccess().getTypeAssignment_2(), "rule__Property__TypeAssignment_2");
					put(grammarAccess.getPropertyAccess().getSelectorAssignment_3_1(), "rule__Property__SelectorAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ConfigurationLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ConfigurationLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
