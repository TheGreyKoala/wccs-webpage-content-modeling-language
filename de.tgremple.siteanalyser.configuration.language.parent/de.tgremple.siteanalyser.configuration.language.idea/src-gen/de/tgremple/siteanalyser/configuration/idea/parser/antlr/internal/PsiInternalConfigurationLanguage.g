/*
 * generated by Xtext 2.12.0
 */
grammar PsiInternalConfigurationLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package de.tgremple.siteanalyser.configuration.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.tgremple.siteanalyser.configuration.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import de.tgremple.siteanalyser.configuration.idea.lang.ConfigurationLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import de.tgremple.siteanalyser.configuration.services.ConfigurationLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected ConfigurationLanguageGrammarAccess grammarAccess;

	protected ConfigurationLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalConfigurationLanguageParser(PsiBuilder builder, TokenStream input, ConfigurationLanguageElementTypeProvider elementTypeProvider, ConfigurationLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
		this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "SiteStructure";
	}

}

//Entry rule entryRuleSiteStructure
entryRuleSiteStructure returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSiteStructureElementType()); }
	iv_ruleSiteStructure=ruleSiteStructure
	{ $current=$iv_ruleSiteStructure.current; }
	EOF;

// Rule SiteStructure
ruleSiteStructure returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getSiteStructure_TypeDefinitionsTypeParserRuleCall_0ElementType());
			}
			lv_typeDefinitions_0_0=ruleType
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)*
;

//Entry rule entryRuleType
entryRuleType returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getTypeElementType()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getType_ContentTypeParserRuleCall_0ElementType());
		}
		this_ContentType_0=ruleContentType
		{
			$current = $this_ContentType_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getType_PageTypeParserRuleCall_1ElementType());
		}
		this_PageType_1=rulePageType
		{
			$current = $this_PageType_1.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleContentType
entryRuleContentType returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getContentTypeElementType()); }
	iv_ruleContentType=ruleContentType
	{ $current=$iv_ruleContentType.current; }
	EOF;

// Rule ContentType
ruleContentType returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getContentType_ContentKeyword_0ElementType());
		}
		otherlv_0='content'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getContentType_TypeKeyword_1ElementType());
		}
		otherlv_1='type'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getContentType_NameIDTerminalRuleCall_2_0ElementType());
				}
				lv_name_2_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_2_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getContentType_IsKeyword_3_0ElementType());
			}
			otherlv_3='is'
			{
				doneLeaf(otherlv_3);
			}
			{
				markLeaf(elementTypeProvider.getContentType_RecognizedKeyword_3_1ElementType());
			}
			otherlv_4='recognized'
			{
				doneLeaf(otherlv_4);
			}
			{
				markLeaf(elementTypeProvider.getContentType_ByKeyword_3_2ElementType());
			}
			otherlv_5='by'
			{
				doneLeaf(otherlv_5);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getContentType_SelectorContentSelectorParserRuleCall_3_3_0ElementType());
					}
					lv_selector_6_0=ruleContentSelector
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)?
		(
			{
				markLeaf(elementTypeProvider.getContentType_RecognizeKeyword_4_0ElementType());
			}
			otherlv_7='recognize'
			{
				doneLeaf(otherlv_7);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getContentType_PropertiesPropertyParserRuleCall_4_1_0ElementType());
					}
					lv_properties_8_0=ruleProperty
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)*
		)?
	)
;

//Entry rule entryRulePageType
entryRulePageType returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPageTypeElementType()); }
	iv_rulePageType=rulePageType
	{ $current=$iv_rulePageType.current; }
	EOF;

// Rule PageType
rulePageType returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getPageType_PageKeyword_0ElementType());
		}
		otherlv_0='page'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getPageType_TypeKeyword_1ElementType());
		}
		otherlv_1='type'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getPageType_NameIDTerminalRuleCall_2_0ElementType());
				}
				lv_name_2_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getPageType_IsKeyword_3ElementType());
		}
		otherlv_3='is'
		{
			doneLeaf(otherlv_3);
		}
		{
			markLeaf(elementTypeProvider.getPageType_RecognizedKeyword_4ElementType());
		}
		otherlv_4='recognized'
		{
			doneLeaf(otherlv_4);
		}
		{
			markLeaf(elementTypeProvider.getPageType_ByKeyword_5ElementType());
		}
		otherlv_5='by'
		{
			doneLeaf(otherlv_5);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getPageType_SelectorPageSelectorParserRuleCall_6_0ElementType());
				}
				lv_selector_6_0=rulePageSelector
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getPageType_RecognizeKeyword_7_0ElementType());
			}
			otherlv_7='recognize'
			{
				doneLeaf(otherlv_7);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getPageType_PropertiesPropertyParserRuleCall_7_1_0ElementType());
					}
					lv_properties_8_0=ruleProperty
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)*
		)?
	)
;

//Entry rule entryRuleContentSelector
entryRuleContentSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getContentSelectorElementType()); }
	iv_ruleContentSelector=ruleContentSelector
	{ $current=$iv_ruleContentSelector.current; }
	EOF;

// Rule ContentSelector
ruleContentSelector returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getContentSelector_CssSelectorParserRuleCallElementType());
	}
	this_CssSelector_0=ruleCssSelector
	{
		$current = $this_CssSelector_0.current;
		doneComposite();
	}
;

//Entry rule entryRulePageSelector
entryRulePageSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPageSelectorElementType()); }
	iv_rulePageSelector=rulePageSelector
	{ $current=$iv_rulePageSelector.current; }
	EOF;

// Rule PageSelector
rulePageSelector returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getPageSelector_CssSelectorParserRuleCall_0ElementType());
		}
		this_CssSelector_0=ruleCssSelector
		{
			$current = $this_CssSelector_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getPageSelector_UrlPatternSelectorParserRuleCall_1ElementType());
		}
		this_UrlPatternSelector_1=ruleUrlPatternSelector
		{
			$current = $this_UrlPatternSelector_1.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleCssSelector
entryRuleCssSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCssSelectorElementType()); }
	iv_ruleCssSelector=ruleCssSelector
	{ $current=$iv_ruleCssSelector.current; }
	EOF;

// Rule CssSelector
ruleCssSelector returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getCssSelector_CssKeyword_0ElementType());
		}
		otherlv_0='css'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getCssSelector_DefinitionSTRINGTerminalRuleCall_1_0ElementType());
				}
				lv_definition_1_0=RULE_STRING
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_definition_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleUrlPatternSelector
entryRuleUrlPatternSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getUrlPatternSelectorElementType()); }
	iv_ruleUrlPatternSelector=ruleUrlPatternSelector
	{ $current=$iv_ruleUrlPatternSelector.current; }
	EOF;

// Rule UrlPatternSelector
ruleUrlPatternSelector returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getUrlPatternSelector_UrlKeyword_0ElementType());
		}
		otherlv_0='url'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getUrlPatternSelector_PatternKeyword_1ElementType());
		}
		otherlv_1='pattern'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getUrlPatternSelector_DefinitionSTRINGTerminalRuleCall_2_0ElementType());
				}
				lv_definition_2_0=RULE_STRING
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_definition_2_0);
				}
			)
		)
	)
;

//Entry rule entryRuleProperty
entryRuleProperty returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPropertyElementType()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getProperty_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getProperty_AsKeyword_1ElementType());
		}
		otherlv_1='as'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markLeaf(elementTypeProvider.getProperty_TypeContentTypeCrossReference_2_0ElementType());
				}
				otherlv_2=RULE_ID
				{
					doneLeaf(otherlv_2);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getProperty_ByKeyword_3_0ElementType());
			}
			otherlv_3='by'
			{
				doneLeaf(otherlv_3);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getProperty_SelectorContentSelectorParserRuleCall_3_1_0ElementType());
					}
					lv_selector_4_0=ruleContentSelector
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
